import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# 예제 데이터 생성 (Feature7까지 추가)
data = pd.DataFrame({
    'Feature1': [2469836,1424718,1107082,1212836,1468973,1251574,1473050,1735968,1609598,1397413],
    'Feature2': [26.22,19.27,22.37,22.74,28.69,24.26,23.18,29.23,22.14,25.6],
    'Feature3': [2.784954106,0.854514711,3.23867794,2.963206751,3.713470046,1.848737092,1.68034595,3.271526873,1.381020202,2.918778378],
    'Feature4': [1.3,1.1,0.8,1.8,0.8,0.9,0.8,1.0,0.6,2.4],
    'Feature5': [130000,110000,60000,90000,100000,90000,110000,110000,110000,90000],
    'Feature6': [567159,497827,240680,360211,374962,284258,436901,397942,470185,387433],
    'Feature7': [2410000,1550000,1090000,1340000,2310000,1740000,1510000,2780000,1300000,1320000],  # 유동인구
    'Target': [1613895.22,1246896.93,985895.89,930659.58,1490474.94,1188894.88,1073628.17,1627496.92,1103401.02,872125.48],
})

# 독립 변수와 종속 변수 분리
X = data.drop(columns=['Target'])
y = data['Target']

# 상관 행렬 계산
correlation_matrix = X.corr()

# 상관 행렬 시각화
plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1, center=0)
plt.title('Correlation Matrix')
plt.show()

# 데이터 표준화
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# PCA 수행
pca = PCA()
X_pca = pca.fit_transform(X_scaled)

# 각 주성분의 분산 비율
explained_variance_ratio = pca.explained_variance_ratio_

# 주성분의 누적 분산 비율
cumulative_variance_ratio = np.cumsum(explained_variance_ratio)

# PCA 결과 시각화
plt.figure(figsize=(10, 6))
plt.plot(range(1, len(explained_variance_ratio) + 1), cumulative_variance_ratio, marker='o', linestyle='--')
plt.xlabel('Number of Principal Components')
plt.ylabel('Cumulative Explained Variance Ratio')
plt.title('PCA Explained Variance Ratio')
plt.grid()
plt.show()

# 주성분 분석 결과 출력
print("각 주성분의 분산 비율:")
for i, variance in enumerate(explained_variance_ratio, start=1):
    print(f"Principal Component {i}: {variance:.4f}")

print("\n누적 분산 비율:")
for i, cumulative_variance in enumerate(cumulative_variance_ratio, start=1):
    print(f"Up to Principal Component {i}: {cumulative_variance:.4f}")

# PCA의 주요 변수 시각화
pca_components = pd.DataFrame(pca.components_, columns=X.columns, index=[f'PC{i+1}' for i in range(X.shape[1])])
plt.figure(figsize=(14, 10))
sns.heatmap(pca_components, cmap='coolwarm', annot=True)
plt.title('PCA Components')
plt.show()
